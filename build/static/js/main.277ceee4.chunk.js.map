{"version":3,"sources":["assets sync /^/.*$","Homepage/DropZone.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","DropZone","props","history","useHistory","useState","uploadedFile","setUploadedFile","isUploaded","setIsUploaded","isMerge","setIsMerge","isMerging","setIsMerging","isImageLoaded","setIsImageLoaded","console","log","className","onDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","direction","provided","snapshot","ref","innerRef","style","isDraggingOver","background","height","display","padding","overflow","droppableProps","map","file","draggableId","name","draggableProps","dragHandleProps","isDragging","draggableStyle","width","userSelect","grid","margin","src","require","default","alt","placeholder","onClick","axios","get","responseType","then","res","url","window","URL","createObjectURL","Blob","data","type","link","document","createElement","href","setAttribute","body","appendChild","click","FormData","x","length","append","post","status","alert","statusText","setTimeout","disabled","action","method","encType","multiple","onChange","target","files","catch","err","response","push","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.277ceee4.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 65;","import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./DropZone.css\";\r\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\";\r\nimport axios from \"axios\";\r\n\r\nfunction DropZone(props) {\r\n\tconst history = useHistory();\r\n\tconst [uploadedFile, setUploadedFile] = useState(null);\r\n\tconst [isUploaded, setIsUploaded] = useState(false);\r\n\tconst [isMerge, setIsMerge] = useState(false);\r\n\tconst [isMerging, setIsMerging] = useState(false);\r\n\tconst [isImageLoaded, setIsImageLoaded] = useState(false);\r\n\r\n\t// file upload handler\r\n\t// const fileHandler = (e) => {\r\n\t// \t// const files = Array.from(e.target.files);\r\n\t// \t// console.log(e.target.files);\r\n\t// \t// console.log(files);\r\n\t// \t// setUploadedFile(files);\r\n\t// \tconsole.log(e.target.files);\r\n\r\n\t// \tsetUploadedFile(e.target.files);\r\n\t// };\r\n\r\n\tconst fileHandler = (e) => {\r\n\t\tconst data = new FormData();\r\n\t\tconsole.log(e.target.files);\r\n\t\tfor (let x = 0; x < e.target.files.length; x++) {\r\n\t\t\tdata.append(\"files\", e.target.files[x]);\r\n\t\t}\r\n\t\taxios\r\n\t\t\t.post(\"https://pdf-converter-js.herokuapp.com/merge\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\t// then print response status\r\n\t\t\t\tif (res.status === 500) {\r\n\t\t\t\t\talert(\"png/jpg/jpeg files only, please upload the correct files\");\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(res.statusText);\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status !== 200) {\r\n\t\t\t\t\thistory.push(\"/\");\r\n\t\t\t\t\talert(\"png/jpg/jpeg files only, please upload the correct files\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tconsole.log(e.target.files[0].name);\r\n\r\n\t\tsetUploadedFile(e.target.files);\r\n\r\n\t\tsetIsUploaded(true);\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetIsImageLoaded(true);\r\n\t\t}, 4000);\r\n\t};\r\n\r\n\t// onDragEndHandler\r\n\tconst onDragEndHandler = (result) => {\r\n\t\tif (!result.destination) return;\r\n\r\n\t\tconst items = Array.from(uploadedFile);\r\n\r\n\t\tconst [reorderedItem] = items.splice(result.source.index, 1);\r\n\t\titems.splice(result.destination.index, 0, reorderedItem);\r\n\r\n\t\tsetUploadedFile(items);\r\n\t};\r\n\r\n\tconst grid = 8;\r\n\r\n\tconst getItemStyle = (isDragging, draggableStyle) => ({\r\n\t\t// some basic styles to make the items look a bit nicer\r\n\t\twidth: \"250px\",\r\n\t\theight: \"250x\",\r\n\t\tuserSelect: \"none\",\r\n\t\tpadding: grid * 2,\r\n\t\tmargin: `20px ${grid}px 20px ${grid}px`,\r\n\t\t// change background colour if dragging\r\n\r\n\t\t// styles we need to apply on draggables\r\n\t\t...draggableStyle,\r\n\t});\r\n\r\n\tconst getListStyle = (isDraggingOver) => ({\r\n\t\tbackground: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n\r\n\t\theight: \"350px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tpadding: grid,\r\n\t\toverflow: \"auto\",\r\n\t});\r\n\r\n\t// const uploadHandler = () => {\r\n\t// \tconst data = new FormData();\r\n\t// \tfor (let x = 0; x < selectedFile.length; x++) {\r\n\t// \t\tdata.append(\"file\", selectedFile[x]);\r\n\t// \t}\r\n\r\n\t// \taxios.post(\"http://localhost:8000/upload\", data).then((res) => {\r\n\t// \t\t// then print response status\r\n\t// \t\tconsole.log(res.statusText);\r\n\t// \t});\r\n\t// };\r\n\r\n\tconst mergeHandler = () => {\r\n\t\tconst data = new FormData();\r\n\t\tconsole.log(uploadedFile);\r\n\t\tfor (let x = 0; x < uploadedFile.length; x++) {\r\n\t\t\tdata.append(\"files\", uploadedFile[x]);\r\n\t\t}\r\n\t\taxios.post(\"https://pdf-converter-js.herokuapp.com/merge\", data).then((res) => {\r\n\t\t\t// then print response status\r\n\t\t\tif (res.status === 500) {\r\n\t\t\t\talert(\"png/jpg/jpeg files only, please upload the correct files\");\r\n\t\t\t}\r\n\t\t\tconsole.log(res.statusText);\r\n\t\t\tconsole.log(res);\r\n\t\t});\r\n\t\tsetIsMerging(true);\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetIsMerge(true);\r\n\t\t}, 4000);\r\n\t};\r\n\r\n\tconst downloadHandler = () => {\r\n\t\taxios.get(\"https://pdf-converter-js.herokuapp.com/download\", { responseType: \"arraybuffer\" }).then((res) => {\r\n\t\t\tconst url = window.URL.createObjectURL(new Blob([res.data], { type: \"application/pdf\" }));\r\n\t\t\tvar link = document.createElement(\"a\");\r\n\t\t\tlink.href = url;\r\n\t\t\tlink.setAttribute(\"download\", \"output.pdf\");\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t});\r\n\r\n\t\tsetIsUploaded(false);\r\n\t};\r\n\tconsole.log(uploadedFile);\r\n\treturn (\r\n\t\t<div className=\"upload-container\">\r\n\t\t\t<h1>JPG to PDF Converter</h1>\r\n\t\t\t{!isUploaded ? <></> : <div className=\"progress-bar\" />}\r\n\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t{!isUploaded ? (\r\n\t\t\t\t\t<form id=\"#\" action=\"/merge\" method=\"post\" encType=\"multipart/form-data\">\r\n\t\t\t\t\t\t<div className=\"files\">\r\n\t\t\t\t\t\t\t<input type=\"file\" id=\"file-input\" name=\"files\" className=\"form-control\" multiple onChange={fileHandler} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{/* <div className=\"progressbar\">{isUploaded ? <ProgressBar /> : <></>}</div> */}\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<DragDropContext onDragEnd={onDragEndHandler}>\r\n\t\t\t\t\t\t\t\t<Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={getListStyle(snapshot.isDraggingOver)}\r\n\t\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"list\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{Array.from(uploadedFile).map((file, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={file.name} draggableId={file.name} index={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isImageLoaded ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={require(`../assets/${file.name}`).default} alt=\"\" width=\"200px\" height=\"150px\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RotateLeftIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"p\">{file.name}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t\t\t</DragDropContext>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* <div>\r\n\t\t\t\t\t\t\t<MergePage files={Array.from(uploadedFile)} />\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t{!isMerge ? (\r\n\t\t\t\t\t\t\t<button onClick={mergeHandler} className=\"btn merge-btn\" disabled={isMerging || !isImageLoaded}>\r\n\t\t\t\t\t\t\t\t{!isMerging ? \"Merge\" : \"Merging...\"}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button onClick={downloadHandler} className=\"btn merge-btn\">\r\n\t\t\t\t\t\t\t\tDownload\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* <button onClick={mergePage}>go to files</button> */}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default DropZone;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport DropZone from \"./Homepage/DropZone\";\n\nimport \"./App.css\";\n\nfunction App() {\n\treturn (\n\t\t// <div className=\"App\">\n\t\t//   <header className=\"App-header\">\n\t\t//     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t//     <p>\n\t\t//       Edit <code>src/App.js</code> and save to reload.\n\t\t//     </p>\n\t\t//     <a\n\t\t//       className=\"App-link\"\n\t\t//       href=\"https://reactjs.org\"\n\t\t//       target=\"_blank\"\n\t\t//       rel=\"noopener noreferrer\"\n\t\t//     >\n\t\t//       Learn React\n\t\t//     </a>\n\t\t//   </header>\n\t\t// </div>\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={DropZone} />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n"],"sourceRoot":""}